---
- hosts: all
  remote_user: root
  become: true
  vars:
    container_count: 1
    default_container_name: CSN
    default_container_image: s1ngle/dhtcsnmse:latest
    default_container_command: java -jar /app/app.jar

  tasks:
    - name: Show Inventory Hostname
      debug:
        msg: "{{ inventory_hostname }}"
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Pull default Docker image
      community.docker.docker_image:
        name: "{{ default_container_image }}"
        source: pull
        force_source: true

    - name: Create default containers
      when: inventory_hostname == 'server-1'
      community.docker.docker_container:
        name: "{{ default_container_name }}{{ item }}"
        image: "{{ default_container_image }}"
        command: "{{ default_container_command }}"
        env:
          NODE_JOIN_ADDRESS: "{{ node_join_address }}"
        state: started
        restart: true
        ports:
          - "8080:8080"
      with_sequence: count={{ container_count }}


    - name: Deployment pause after server 1
      pause: 
        seconds: 25
        
    - name: Create default containers
      when: inventory_hostname == 'server-2'
      community.docker.docker_container:
        name: "{{ default_container_name }}{{ item }}"
        image: "{{ default_container_image }}"
        command: "{{ default_container_command }}"
        env:
          NODE_JOIN_ADDRESS: "{{ node_join_address }}"
        state: started
        restart: true
        ports:
          - "8080:8080"
      with_sequence: count={{ container_count }}

    - name: Deployment pause after server 2
      pause: 
        seconds: 25
      
    - name: Create default containers
      when: inventory_hostname == 'server-3'
      community.docker.docker_container:
        name: "{{ default_container_name }}{{ item }}"
        image: "{{ default_container_image }}"
        command: "{{ default_container_command }}"
        env:
          NODE_JOIN_ADDRESS: "{{ node_join_address }}"
        state: started
        restart: true
        ports:
          - "8080:8080"
      with_sequence: count={{ container_count }}
